plugins {
    id 'com.android.application'

    //Can upgrade this to 0.9.2, but at the time of writing this, there is a bug.
    // https://github.com/google/protobuf-gradle-plugin/issues/656
    // https://github.com/google/protobuf-gradle-plugin/tree/master/testProjectAndroidKotlinDsl
    id 'com.google.protobuf' version '0.9.1'

    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'idea'
    //kotlin-kapt must be at the bottom to work with dagger
    id 'kotlin-kapt'
}

android {

    signingConfigs {
        debug {
            storePassword 'android'
        }
    }
    compileSdkVersion 33

    defaultConfig {
        applicationId "site.letsgoapp.letsgo"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 31
        versionName "1.0.9"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            //debuggable must be set in order for proguard/r8 to optimize
            debuggable = false

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //NOTE: The below line is used for profileable release app. Should be commented out for production release.
            //signingConfig signingConfigs.debug
        }
        debug {
            //isDebuggable must be set in order for proguard/r8 to optimize
            debuggable = true

            minifyEnabled false
        }
    }

    buildFeatures {
         viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        //jvmTarget = JavaVersion.VERSION_11.toString()
        freeCompilerArgs = ['-Xjvm-default=all-compatibility']
    }

    kotlin {
        jvmToolchain(11)
    }

    testOptions {
        unitTests {
            //this 'allows' the testing features to interact with the android system so be careful with it
            //returnDefaultValues = true
            includeAndroidResources = true
        }
        animationsDisabled = true
    }

    sourceSets {
        main {
            proto {
                //the directory where protocol buffers are extracted from
                srcDir "/home/jeremiah/Documents/Lets_Go_Docs/lets_go_proto/proto_client_server_shared"
            }
        }
    }

    // used for profileable release app
//    aaptOptions {
//        additionalParameters =["--warn-manifest-validation"]
//    }

    //Gradle automatically adds 'android.test.runner' as a dependency.
    //Testing stuff
    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
    buildToolsVersion '31.0.0'
    namespace 'site.letsgoapp.letsgo'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.22.2"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$gRPC_version"
        }
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$gRPC_kotlin_version:jdk8@jar"
        }
    }

    generateProtoTasks {
        all().forEach {
            it.builtins {
                java {
                    option("lite")
                }
            }
            it.plugins {
                grpc {
                    option("lite")
                }
                grpckt {
                    option("lite")
                }
            }
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'

    // Android KTX
    implementation 'androidx.core:core-ktx:1.10.0'

    // Support libraries
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"
    // ViewModel, LiveData and Application process lifecycle dependencies
    implementation "androidx.lifecycle:lifecycle-process:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle_extensions"

    // Navigation Stuff
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    //implementation "androidx.navigation:navigation-safe-args-gradle-plugin:2.3.0"

    // Room dependencies
    implementation "androidx.room:room-runtime:$version_room"
    implementation "androidx.test.uiautomator:uiautomator:$versionUiAutomator"
    kapt "androidx.room:room-compiler:$version_room"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$version_room"

    // Work Manager
    implementation "androidx.work:work-runtime-ktx:2.8.1"

    //gRPC
    implementation "io.grpc:grpc-android:$gRPC_version" //AndroidChannelBuilder
    implementation "io.grpc:grpc-okhttp:$gRPC_version"

    //protobuf
    implementation "io.grpc:grpc-protobuf-lite:$gRPC_version"
    implementation "io.grpc:grpc-stub:$gRPC_version"
    implementation "io.grpc:grpc-kotlin-stub:$gRPC_kotlin_version"
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
    //implementation 'javax.annotation:javax.annotation-api:1.3.2'

    //multi dex, this will allow more than the base number (65k I think) of methods
    //also added multiDexEnabled true in defaultConfig
    //and change the XML File name or the Application class extension
    implementation "androidx.multidex:multidex:$multidex_version"

    //Google auto phone verification & login
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:18.0.1'
    implementation 'com.google.gms:google-services:4.3.15'
    //Google location
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    //more Google stuff
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.material:material:1.8.0'

    //Facebook
    //NOTE: Put a tag of ~FACEBOOK TAG~ around everything commented out for this.
    //implementation 'com.facebook.android:facebook-login:15.0.2'

    //Coroutines (included in other implementations, however want to guarantee most recent version)
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // Core library
//    testImplementation "androidx.test:core:$androidXTestCoreVersion"
//    androidTestImplementation "androidx.test:core:$androidXTestCoreVersion"

    // junit for tests
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "junit:junit:$junitVersion"

    // fragment testing
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"

    // AndroidJUnitRunner and JUnit Rules
    //NOTE: At the time of writing this, the highest runner version is 1.5.0 even though it recommends an upgrade.
    androidTestImplementation("androidx.test:runner:$androidXTestCoreVersion")
    androidTestImplementation("androidx.test:rules:$androidXTestCoreVersion")

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"

    // Dependencies for Android instrumented unit tests
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    //If this is enabled without the excludes the app will get stuck on
    // Task :app:connectedDebugAndroidTest
    // even with animations off
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$espressoVersion") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'recyclerview-v7'
        exclude module: 'appcompat-v7'
    }

    // AndroidX Test - JVM testing
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
//    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
//    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    //coroutine testing
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_kotlin_coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_kotlin_coroutines"

    //API 31 splash screen stuff
    //NOTE: This is in beta, it doesn't seem to work on Pixel 4 API 21 at all. Turning
    // it off for now.
    //implementation "androidx.core:core-splashscreen:1.0.0-beta01"

    // Kotlin
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    //FlexboxLayout
    implementation 'com.github.google:flexbox-layout:3.0.0'

    //ViewPager2
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    //Card Stack View
    implementation 'com.github.yuyakaido:cardstackview:2.3.4'

    //Image Picker Library
    //https://github.com/Dhaval2404/ImagePicker
    //implementation 'com.github.dhaval2404:imagepicker:2.1'

    //LeakCanary (debugImplementation because LeakCanary should only run in debug builds)
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    /*
    //These are for configuring the final APK build, these are the common configurations
    implementation—The dependency is available in all source sets, including the test source sets.
    testImplementation—The dependency is only available in the test source set.
    androidTestImplementation—The dependency is only available in the androidTest source set.
     */

    //implementation "com.android.support:support-v4:"
}
